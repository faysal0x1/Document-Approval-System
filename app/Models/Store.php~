<?php

namespace App\Models;

use App\Traits\BelongsToCompany;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasOne;

class Store extends Model
{
    use BelongsToCompany, HasFactory;

    protected $fillable = [
        'company_id',
        'name',
        'address',
        'created_by',
        'updated_by',
    ];

    public function businessLocations(): HasOne
    {
        return $this->hasOne(BusinessLocation::class);
    }

    //    public function products()
    //    {
    //        return $this->hasMany(Product::class);
    //    }

    public function Expenses()
    {
        return $this->hasMany(Expense::class);
    }

    public function purchases()
    {
        return $this->hasMany(Purchase::class);
    }

    public function sells()
    {
        return $this->hasMany(Sell::class);
    }

    public function users()
    {
        return $this->belongsToMany(User::class, 'user_stores', 'store_id', 'user_id')
            ->withPivot('role')
            ->withTimestamps();
    }

    public function accounts()
    {
        return $this->hasMany(Account::class);
    }

    public function creator()
    {
        return $this->belongsTo(User::class, 'created_by');
    }

    public function updater()
    {
        return $this->belongsTo(User::class, 'updated_by');
    }

    public function storeProducts()
    {
        return $this->hasMany(Product::class);
    }

    public function products()
    {
        return $this->belongsToMany(Product::class, 'product_has_stores')
            ->withPivot('quantity', 'purchase_price', 'selling_price')
            ->withTimestamps();
    }

    public function sentTransfers()
    {
        return $this->hasMany(ProductTransfer::class, 'from_store_id');
    }

    public function receivedTransfers()
    {
        return $this->hasMany(ProductTransfer::class, 'to_store_id');
    }
}
